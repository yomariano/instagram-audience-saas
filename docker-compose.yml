version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=8000
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - APIFY_TOKEN=${APIFY_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      # CORS configuration for production
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://instagram-app.teabag.online,https://www.instagram-app.teabag.online}
    networks:
      - coolify
    expose:
      - "8000"  # Only expose to other containers, not to host
    labels:
      # Caddy Docker Proxy labels for subdomain
      - "caddy=instagram-api.teabag.online"
      - "caddy.reverse_proxy={{upstreams 8000}}"
      - "caddy.reverse_proxy.health_uri=/health"
      - "caddy.reverse_proxy.health_interval=5s"
      - "caddy.reverse_proxy.health_timeout=2s"
      # Additional reliability settings
      - "caddy.reverse_proxy.lb_policy=round_robin"
      - "caddy.reverse_proxy.fail_duration=10s"
      - "caddy.reverse_proxy.max_fails=3"
      # Coolify management labels
      - "coolify.managed=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1

networks:
  coolify:
    external: true